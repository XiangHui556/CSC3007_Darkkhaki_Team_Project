---
title: "P3 Darkkhaki"
author: "Zhang XiangHui, Lin WeiChen, Priscilla Thung, Tang Guan You, Arshad Bin Mazlan, Wong Jing Yong Shawn"
format: html
editor: visual
---

# **1Â  Introduction**

## 1.1 Data and Library Import

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(patchwork)
library(tmap)
library(sf)
library(mapview)
library(rmapshaper)
library(readxl)
library(scales)
library(usmap)
library(ggtext)
```

## 1.2 Data Import and Cleaning

```{r}
#| message: false

# Read the CSV file and remove all address with NA
restaurants <- read_csv("updated_restaurant_list_v2.csv") |>
  drop_na(full_address)

# Extract the state abbreviation using a regular expression and clean it up
restaurants <- restaurants %>%
  mutate(state = str_extract(full_address, ",\\s*([A-Z]{2})\\s*,") %>% 
                   str_replace_all("^,\\s*|\\s*,$", ""))

# Select the state and Year Partnered columns
filtered_restaurants <- restaurants %>%
  select(id, state, `Year Partnered`)

# Remove all records with empty state
filtered_restaurants <- filtered_restaurants |>
  drop_na(state)

filtered_restaurants

# Check for NA rows
#na_count <- sum(is.na(filtered_restaurants$state))
#na_count

# Print records with NA in the state column
#records_with_na <- filtered_restaurants %>%
#  filter(is.na(state))
#records_with_na
```

## 1.3 Group each state by the number of restaurants for each year

```{r}
#| message: false

# Group the data by state and year
grouped_restaurants <- filtered_restaurants |>
  group_by(state, `Year Partnered`) |>
  summarise(count = n())

grouped_restaurants


```

## 1.4 Percentage increase after each year

```{r}
# Calculate the percentage increase after each year
grouped_restaurants <- grouped_restaurants |>
  group_by(state) |>
  mutate(percentage_increase = (count - lag(count)) / lag(count) * 100)

grouped_restaurants

```

## 1.5 Map visualisation of USA

```{r}

# Prepare the latest year's percentage increase for each state add color column to store the color of the text
latest_year_data <- grouped_restaurants %>%
  group_by(state) %>%
  filter(`Year Partnered` == max(`Year Partnered`)) %>%
  ungroup()

# Get centroids for each state
centroid_labels <- usmapdata::centroid_labels("states")

# Rename the column in centroid_labels to match latest_year_data
centroid_labels <- centroid_labels %>%
  rename(state = abbr)

# Join centroids to data
state_labels <- merge(latest_year_data, centroid_labels, by = "state")

# Extract x and y coordinates from geom column using stringr and add 2 new column lon and lat (state_labels is used for plotting the label of the states with data)
state_labels <- state_labels %>%
  mutate(
    lon_lat = str_extract_all(geom, "-?\\d+\\.?\\d*"),
    lon = as.numeric(sapply(lon_lat, function(x) x[1])),
    lat = as.numeric(sapply(lon_lat, function(x) x[2]))
  ) %>%
  select(-lon_lat)

# Extract x and y coordinates from geom column using stringr and add 2 new column lon and lat (centroid_labels is used for plotting the label of the states with no data)
centroid_labels <- centroid_labels %>%
  mutate(
    lon_lat = str_extract_all(geom, "-?\\d+\\.?\\d*"),
    lon = as.numeric(sapply(lon_lat, function(x) x[1])),
    lat = as.numeric(sapply(lon_lat, function(x) x[2]))
  ) %>%
  select(-lon_lat)

# missing_states is used for plotting the label of the states with no data
all_states <- unique(centroid_labels$state)
plotted_states <- unique(latest_year_data$state)
missing_states <- setdiff(all_states, plotted_states)

# Define a list of states with smaller areas (For a smaller size of the label text)
small_area_states <- c("CT", "DE", "DC", "HI", "MD", "MA", "NH", "NJ", "RI", "VT")

# Plotting the US map with the percentage increase
p <- plot_usmap(data = latest_year_data, values = "percentage_increase", color = "white", labels = FALSE) +
  theme(legend.position = "right") +
  scale_fill_fermenter(palette = "Blues", name = "Percentage Increase", label = percent_format(scale=1), direction = 1) +
  labs(title = "Virtual restaurants percentage increase by State", subtitle = "2024 Percentage Increase", caption = "**Source**: Kaggle Dataset of Uber Eats USA Restaurants") +
  theme(
    plot.caption = element_markdown()
  ) +
  # First geom_text is used for plotting states with data
  geom_text(data = state_labels, aes(
    x = lon, y = lat,
    label = state,
  ), color = ifelse(is.na(state_labels$percentage_increase) | state_labels$percentage_increase <= 150, "black", "white"),
  size = ifelse(state_labels$state %in% small_area_states, 1.5, 3)) +
  # Second geom_text is used for plotting states with no data
  geom_text(data = centroid_labels, aes(
    x = lon, y = lat,
    label = ifelse(state %in% missing_states, state, "")),
    size = ifelse(centroid_labels$state %in% small_area_states, 1.5, 3), color = "gray"
  )

# Set label font size for usmap library
#p$layers[[2]]$aes_params$size <- 2

p

# Checking the states that are included in the data
unique_states <- grouped_restaurants %>%
  distinct(state)
unique_states
```
