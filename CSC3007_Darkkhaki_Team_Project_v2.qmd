---
title: "P3 Darkkhaki"
author: "Zhang XiangHui, Lin Weichen, Priscilla Thung, Tang Guan You, Arshad Bin Mazlan, Wong Jing Yong Shawn"
date: "2024-06-29"
format: html
editor: visual
---

# Introduction
## Load necessary packages

```{r}
#| label: setup
#| message: false
#| warning: false

library(dplyr)
library(ggplot2)
library(usmap)
library(scales)
library(tidyverse)
library(sf)
library(ggtext)
library(stringr)
```

## Data cleaning and transformation

```{r}
#| message: false

# Load the restaurants 2020 data
restaurants_2020 <- read_csv("restaurants_2020.csv") |>
  drop_na(addressRegion)

# Load the restaurants 2023 data
restaurants_2023 <- read_csv("restaurants_2023.csv") |>
  drop_na(full_address)

# Extract the state abbreviation using a regular expression and clean it up
restaurants_2023 <- restaurants_2023 %>%
  mutate(state = str_extract(full_address, ",\\s*([A-Z]{2})\\s*,") %>% 
                   str_replace_all("^,\\s*|\\s*,$", ""))
```


## Group the restaurants by state

```{r}
# Grouping 2020 data by addressRegion
data_2020_grouped <- restaurants_2020 %>%
  group_by(addressRegion) %>%
  summarise(count_2020 = n())

# Grouping 2023 data by state
data_2023_grouped <- restaurants_2023 %>%
  group_by(state) %>%
  summarise(count_2023 = n())
```


## Merge the two datasets and calculate the percentage difference

```{r}
# Merging the two datasets
merged_data <- merge(data_2023_grouped, data_2020_grouped, by.x = "state", by.y = "addressRegion", all = TRUE)

# Filtering out regions with zero or NA values in 2023
filtered_data <- merged_data %>%
  filter(!is.na(count_2023) & count_2023 > 0)

# Calculating the percentage difference
filtered_data <- filtered_data %>%
  mutate(
    count_2020 = ifelse(is.na(count_2020), 0, count_2020),
    percentage_diff = ((count_2023 - count_2020) / ifelse(count_2020 == 0, 1, count_2020)) * 100
  )
```

## Prepare data for plotting

```{r}
# Get state centroids for labeling
state_coords <- usmap::us_map(regions = "states")

# Convert to an sf object
state_coords_sf <- st_as_sf(state_coords, coords = c("long", "lat"), crs = 4326, agr = "constant")

# Calculate centroids for each state
state_centroids <- state_coords_sf %>%
  st_centroid() %>%
  st_coordinates() %>%
  as_tibble() %>%
  bind_cols(state_coords_sf)

# Prepare data for centroid labels
state_centroids <- state_centroids %>%
  rename(lon = X, lat = Y) %>%
  select(abbr, lon, lat)

# Print state centroids before adjustments
print(state_centroids %>% filter(abbr %in% c("FL", "HI")))

# Adjust the coordinates for FL and HI
state_centroids <- state_centroids %>%
  mutate(
    lon = if_else(abbr == "FL", lon + 150000, lon),
    lat = if_else(abbr == "FL", lat - 100000, lat),
    lon = if_else(abbr == "HI", lon + 100000, lon),
    lat = if_else(abbr == "HI", lat - 75000, lat)
  )

# Print state centroids after adjustments
print(state_centroids %>% filter(abbr %in% c("FL", "HI")))

# Find missing states (states with no data)
all_states <- unique(state_centroids$abbr)
plotted_states <- unique(filtered_data$state)
missing_states <- setdiff(all_states, plotted_states)

# Define a list of states with smaller areas (For a smaller size of the label text)
small_area_states <- c("CT", "DE", "DC", "HI", "MD", "MA", "NH", "NJ", "RI", "VT")

# Prepare state_labels for plotting
state_labels <- state_centroids %>%
  left_join(filtered_data, by = c("abbr" = "state")) %>%
  mutate(
    label_color = ifelse(is.na(percentage_diff) | percentage_diff <= 200, "black", "white"),
    label_size = ifelse(abbr %in% small_area_states, 1.5, 3)
  )

# Prepare centroid_labels for states with no data
centroid_labels <- state_centroids %>%
  mutate(
    label_text = ifelse(abbr %in% missing_states, abbr, ""),
    label_size = ifelse(abbr %in% small_area_states, 1.5, 3)
  )

```


## Plot the US map with percentage increase

```{r}
# Define the breaks for the color scale
breaks <- c(-100, 0, 50, 100, 200, 300)

# Plotting the US map with the percentage increase
plot_usmap(data = filtered_data, values = "percentage_diff", color = "white") +
  theme(legend.position = "right") +
  scale_fill_fermenter(palette = "Blues", breaks = breaks, name = "Percentage Increase", labels = percent_format(scale = 1), direction = 1) +
  labs(title = "Increase in virtual restaurants by State", subtitle = "between 2020 and 2023", caption = "**Source**: Restaurants Data 2020 and 2023") +
  theme(
    plot.caption = element_markdown(),
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16),
    plot.subtitle = element_text(hjust = 0.5, size = 12)
  ) +
  geom_text(data = state_labels, aes(
    x = lon, y = lat,
    label = abbr,
    color = label_color,
    size = label_size
  )) +
  geom_text(data = centroid_labels, aes(
    x = lon, y = lat,
    label = label_text,
    size = label_size,
  ), color = "black") +
  scale_color_identity() +
  scale_size_identity()

```